---

- name: "[CONTAINER] Verify Podman installed"
  command: "which podman"
  register: podman_installed
  changed_when: false
  ignore_errors: true

- name: "[CONTAINER] Install Podman if not installed"
  package:
    name: podman
    state: present
  when: (podman_installed.rc | default(1)) != 0

- name: "[CONTAINER] Guarantee Podman configure to use compatibility mode docker"
  shell: "nohup podman system service -t 0 > /dev/null 2>&1 &"
  async: 0
  poll: 0

- name: "[CONTAINER] Wait Podman socket is online"
  wait_for:
    path: /run/podman/podman.sock
    state: present
    timeout: 30

- name: "[CONTAINER] Define env var for docker module"
  set_fact:
    docker_env:
      DOCKER_HOST: "unix:///run/podman/podman.sock"

- name: "[CONTAINER] Login to Red Hat Container Registry"
  docker_login:
    registry_url: "registry.redhat.io"
    username: "{{ redhat_username }}"
    password: "{{ redhat_password }}"
  environment: "{{ docker_env }}"
  register: login_result

# - name: "[CONTAINER] Pull the RHEL image from Red Hat Container Registry"
#   docker_image:
#     name: "{{ image_version }}"
#     tag: "{{ tag_version }}"
#     source: pull
#   environment: "{{ docker_env }}"
#   register: pull_result

- name: "[CONTAINER] Pull the RHEL image from Red Hat Container Registry"
  docker_image:
    name: "{{ image_version }}"
    tag: latest
    source: pull
  environment: "{{ docker_env }}"
  register: pull_result

- name: "[CONTAINER] Create container for Kickstart validation"
  docker_container:
    name: "{{ container_name | default('ks_validator_container') }}"
    image: "{{ image_version }}:{{ tag_version }}"
    state: started
    restart_policy: no
    # Ejecuta un comando para mantener el contenedor en ejecución (puedes ajustarlo según necesites)
    command: "tail -f /dev/null"
    volumes:
      - "{{ kickstart_file | dirname }}:/kickstart:ro"
  environment: "{{ docker_env }}"
  register: container_result

- name: "[CONTAINER] Install tools in container"
  community.docker.docker_container_exec:
    container: "{{ container_name | default('ks_validator_container') }}"
    command: "microdnf install -y pykickstart"
  environment: "{{ docker_env }}"
  register: install_ksvalidator